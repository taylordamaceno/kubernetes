---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kafka-connect
  name: kafka-connect-deployment
  namespace: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka-connect
    spec:
      containers:
      - env:
        - name: BOOTSTRAP_SERVERS
          value: kafkaintegracao.blabla.com:9092
        - name: GROUP_ID
          value: "cdc-integracao"
        - name: OFFSET_STORAGE_TOPIC
          value: connect-offsets
        - name: CONFIG_STORAGE_TOPIC
          value: connect-configs
        - name: OFFSET_FLUSH_INTERVAL_MS
          value: "60000"
        - name: OFFSET_FLUSH_TIMEOUT_MS
          value: "5000"
        - name: SHUTDOWN_TIMEOUT
          value: "10000"
        - name: INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        image: debezium/connect:1.0
        imagePullPolicy: IfNotPresent
        name: kafka-connect
        resources:
          limits:
            memory: "2048Mi"
          requests:
            memory: "1024Mi"
        ports:
        - containerPort: 8083
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect-service
  namespace: kafka-connect
  labels:
    app: kafka-connect
spec:
  ports:
    - port: 80
      targetPort: 8083
      name: kafka-connect-service
  selector:
    app: kafka-connect
