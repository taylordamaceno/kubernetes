apiVersion: v1
kind: Namespace
metadata:
  name: rocketchat
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: rocketchat
type: Opaque
data:
  MONGO_ROOT_USERNAME: YWRtaW4=   # Base64 de "admin"
  MONGO_ROOT_PASSWORD: cGFzc3dvcmQ=   # Base64 de "password"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: rocketchat
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: rocketchat
spec:
  selector:
    matchLabels:
      app: mongodb
  serviceName: "mongodb"
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:5.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_ROOT_PASSWORD
            - name: MONGO_REPLICA_SET_NAME
              value: "rs0"
          command: [ "bash", "-c", "
            mongod --replSet rs0 --bind_ip_all --port 27017 & 
            sleep 10 && 
            mongosh --host localhost --eval '
              rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongodb:27017\" }]});
              sleep(5000);
              db.getSiblingDB(\"admin\").createUser({
                user: \"admin\",
                pwd: \"password\",
                roles: [{ role: \"root\", db: \"admin\" }]
              });
            ' &&
            tail -f /dev/null" ]
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: rocketchat
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocketchat
  namespace: rocketchat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rocketchat
  template:
    metadata:
      labels:
        app: rocketchat
    spec:
      containers:
        - name: rocketchat
          image: registry.rocket.chat/rocketchat/rocket.chat:6.5.1
          ports:
            - containerPort: 3000
          env:
            - name: MONGO_URL
              value: "mongodb://admin:password@mongodb:27017/rocketchat?authSource=admin&replicaSet=rs0"
            - name: MONGO_OPLOG_URL
              value: "mongodb://admin:password@mongodb:27017/local?authSource=admin&replicaSet=rs0"
            - name: ROOT_URL
              value: "http://rocketchat:3000"
            - name: PORT
              value: "3000"
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: rocketchat
  namespace: rocketchat
spec:
  type: LoadBalancer
  selector:
    app: rocketchat
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
